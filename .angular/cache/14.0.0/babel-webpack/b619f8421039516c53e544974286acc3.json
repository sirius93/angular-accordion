{"ast":null,"code":"import { Component, ContentChild, Input, ViewEncapsulation } from '@angular/core';\nimport { AccordionComponent } from './accordion.component';\nimport { AccordionToggleComponent } from './accordion-toggle.component';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from './accordion.component';\nimport * as ɵngcc2 from '@angular/common';\nvar _c0 = [[[\"\", 8, \"ngx-accordion-header\"]], [[\"\", 8, \"ngx-accordion-body\"]]];\n\nvar _c1 = function (a0) {\n  return {\n    \"active\": a0\n  };\n};\n\nvar _c2 = [\".ngx-accordion-header\", \".ngx-accordion-body\"];\n\nvar AccordionContainerComponent = function () {\n  /**\r\n   * @param {?} accordion\r\n   */\n  function AccordionContainerComponent(accordion) {\n    this.accordion = accordion;\n    this._isOpen = false;\n    this.accordion.addGroup(this);\n  }\n\n  Object.defineProperty(AccordionContainerComponent.prototype, \"isOpen\", {\n    /**\r\n     * @return {?}\r\n     */\n    get: function () {\n      return this._isOpen;\n    },\n\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\n    set: function (value) {\n      this._isOpen = value;\n\n      if (value) {\n        this.accordion.closeOthers(this);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * @return {?}\r\n   */\n\n  AccordionContainerComponent.prototype.toggleOpen = function () {\n    if (this.toggler) {\n      return;\n    }\n\n    this.toggle();\n  };\n  /**\r\n   * @return {?}\r\n   */\n\n\n  AccordionContainerComponent.prototype.toggle = function () {\n    this.isOpen = !this.isOpen;\n  };\n  /**\r\n   * @return {?}\r\n   */\n\n\n  AccordionContainerComponent.prototype.ngOnInit = function () {};\n\n  AccordionContainerComponent.ɵfac = function AccordionContainerComponent_Factory(t) {\n    return new (t || AccordionContainerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AccordionComponent));\n  };\n\n  AccordionContainerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: AccordionContainerComponent,\n    selectors: [[\"ngx-accordion-container\"]],\n    contentQueries: function AccordionContainerComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, AccordionToggleComponent, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.toggler = _t.first);\n      }\n    },\n    inputs: {\n      isOpen: \"isOpen\",\n      data: \"data\",\n      componentsMap: \"componentsMap\",\n      index: \"index\"\n    },\n    ngContentSelectors: _c2,\n    decls: 5,\n    vars: 7,\n    consts: [[1, \"ngx-accordion-container\"], [1, \"header\", \"clearfix\", 3, \"ngClass\", \"click\"], [1, \"body\", 3, \"hidden\", \"ngClass\"]],\n    template: function AccordionContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function AccordionContainerComponent_Template_div_click_1_listener() {\n          return ctx.toggleOpen();\n        });\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(3, _c1, ctx.isOpen));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"hidden\", !ctx.isOpen)(\"ngClass\", ɵngcc0.ɵɵpureFunction1(5, _c1, ctx.isOpen));\n      }\n    },\n    dependencies: [ɵngcc2.NgClass],\n    encapsulation: 2\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return AccordionContainerComponent;\n}();\n\nexport { AccordionContainerComponent };\n/**\r\n * @nocollapse\r\n */\n\nAccordionContainerComponent.ctorParameters = function () {\n  return [{\n    type: AccordionComponent\n  }];\n};\n\nAccordionContainerComponent.propDecorators = {\n  'data': [{\n    type: Input\n  }],\n  'componentsMap': [{\n    type: Input\n  }],\n  'index': [{\n    type: Input\n  }],\n  'toggler': [{\n    type: ContentChild,\n    args: [AccordionToggleComponent]\n  }],\n  'isOpen': [{\n    type: Input\n  }]\n};\n\nfunction AccordionContainerComponent_tsickle_Closure_declarations() {\n  /** @type {?} */\n  AccordionContainerComponent.decorators;\n  /**\r\n   * @nocollapse\r\n   * @type {?}\r\n   */\n\n  AccordionContainerComponent.ctorParameters;\n  /** @type {?} */\n\n  AccordionContainerComponent.propDecorators;\n  /** @type {?} */\n\n  AccordionContainerComponent.prototype._isOpen;\n  /** @type {?} */\n\n  AccordionContainerComponent.prototype.data;\n  /** @type {?} */\n\n  AccordionContainerComponent.prototype.componentsMap;\n  /** @type {?} */\n\n  AccordionContainerComponent.prototype.index;\n  /** @type {?} */\n\n  AccordionContainerComponent.prototype.toggler;\n  /** @type {?} */\n\n  AccordionContainerComponent.prototype.accordion;\n} //# sourceMappingURL=accordion-container.component.js.map","map":null,"metadata":{},"sourceType":"module"}